##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /

module Twilio
  module REST
    ##
    # A client for accessing the Twilio API.
    class Client
      attr_accessor :http_client, :username, :password, :account_sid, :auth_token

      ##
      # Initializes the Twilio Client
      def initialize(username=nil, password=nil, account_sid=nil, http_client=Twilio::HTTP::Client.new)
        @username = username || Twilio.account_sid
        @password = password || Twilio.auth_token
        @account_sid = account_sid || @username
        @auth_token = @password
        @auth = [@username, @password]
        @http_client = http_client

        # Domains
        @accounts = nil
        @api = nil
        @chat = nil
        @fax = nil
        @ip_messaging = nil
        @lookups = nil
        @monitor = nil
        @notify = nil
        @preview = nil
        @pricing = nil
        @taskrouter = nil
        @trunking = nil
        @video = nil
        @messaging = nil
      end

      ##
      # Makes a request to the Twilio API using the configured http client
      # Authentication information is automatically added if none is provided
      def request(host, port, method, uri, params={}, data={}, headers={}, auth=nil, timeout=nil)
        auth ||= @auth

        headers['User-Agent'] = "twilio-ruby/#{Twilio::VERSION}" +
                                " (#{RUBY_ENGINE}/#{RUBY_PLATFORM}" +
                                " #{RUBY_VERSION}-p#{RUBY_PATCHLEVEL})"
        headers['Accept-Charset'] = 'utf-8'

        if method == 'POST' && !headers['Content-Type']
          headers['Content-Type'] = 'application/x-www-form-urlencoded'
        end

        unless headers['Accept']
          headers['Accept'] = 'application/json'
        end

        @http_client.request(
          host,
          port,
          method,
          uri,
          params,
          data,
          headers,
          auth,
          timeout
        )
      end

      ##
      # Access the Accounts Twilio Domain
      def accounts
        @accounts ||= Accounts.new self
      end

      ##
      # Access the Api Twilio Domain
      def api
        @api ||= Api.new self
      end

      ##
      # Access the Chat Twilio Domain
      def chat
        @chat ||= Chat.new self
      end

      ##
      # Access the Fax Twilio Domain
      def fax
        @fax ||= Fax.new self
      end

      ##
      # Access the IpMessaging Twilio Domain
      def ip_messaging
        @ip_messaging ||= IpMessaging.new self
      end

      ##
      # Access the Lookups Twilio Domain
      def lookups
        @lookups ||= Lookups.new self
      end

      ##
      # Access the Monitor Twilio Domain
      def monitor
        @monitor ||= Monitor.new self
      end

      ##
      # Access the Notify Twilio Domain
      def notify
        @notify ||= Notify.new self
      end

      ##
      # Access the Preview Twilio Domain
      def preview
        @preview ||= Preview.new self
      end

      ##
      # Access the Pricing Twilio Domain
      def pricing
        @pricing ||= Pricing.new self
      end

      ##
      # Access the Taskrouter Twilio Domain
      def taskrouter
        @taskrouter ||= Taskrouter.new self
      end

      ##
      # Access the Trunking Twilio Domain
      def trunking
        @trunking ||= Trunking.new self
      end

      ##
      # Access the Video Twilio Domain
      def video
        @video ||= Video.new self
      end

      ##
      # Access the Messaging Twilio Domain
      def messaging
        @messaging ||= Messaging.new self
      end

      def addresses
        return self.api.v2010.account.addresses
      end

      def applications
        return self.api.v2010.account.applications
      end

      def authorized_connect_apps
        return self.api.v2010.account.authorized_connect_apps
      end

      def available_phone_numbers
        return self.api.v2010.account.available_phone_numbers
      end

      def calls
        return self.api.v2010.account.calls
      end

      def conferences
        return self.api.v2010.account.conferences
      end

      def connect_apps
        return self.api.v2010.account.connect_apps
      end

      def incoming_phone_numbers
        return self.api.v2010.account.incoming_phone_numbers
      end

      def keys
        return self.api.v2010.account.keys
      end

      def messages
        return self.api.v2010.account.messages
      end

      def new_keys
        return self.api.v2010.account.new_keys
      end

      def new_signing_keys
        return self.api.v2010.account.new_signing_keys
      end

      def notifications
        return self.api.v2010.account.notifications
      end

      def outgoing_caller_ids
        return self.api.v2010.account.outgoing_caller_ids
      end

      def queues
        return self.api.v2010.account.queues
      end

      def recordings
        return self.api.v2010.account.recordings
      end

      def signing_keys
        return self.api.v2010.account.signing_keys
      end

      def sip
        return self.api.v2010.account.sip
      end

      def short_codes
        return self.api.v2010.account.short_codes
      end

      def tokens
        return self.api.v2010.account.tokens
      end

      def transcriptions
        return self.api.v2010.account.transcriptions
      end

      def usage
        return self.api.v2010.account.usage
      end

      def validation_requests
        return self.api.v2010.account.validation_requests
      end

      ##
      # Provide a user friendly representation
      def to_s
        "#<Twilio::REST::Client #{@account_sid}>"
      end
    end
  end
end