##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /       

module Twilio
  module REST
    class WorkspaceStatisticsList < ListResource
      ##
      # Initialize the WorkspaceStatisticsList
      def initialize(version, workspace_sid)
        super(version)
        
        # Path Solution
        @solution = {
            'workspace_sid' => workspace_sid
        }
      end
      
      ##
      # Constructs a WorkspaceStatisticsContext
      def get
        WorkspaceStatisticsContext.new(@version, @solution)
      end
      
      ##
      # Provide a user friendly representation
      def to_s
        '#<Twilio.Taskrouter.V1.WorkspaceStatisticsList>'
      end
    end
  
    class WorkspaceStatisticsContext < InstanceContext
      def initialize(version, workspace_sid)
        super(version)
        
        # Path Solution
        @solution = {
            'workspace_sid' => workspace_sid,
        }
        @uri = "/Workspaces/#{@solution[:workspace_sid]}/Statistics"
      end
      
      ##
      # Fetch a WorkspaceStatisticsInstance
      def fetch(minutes: nil, start_date_before: nil, start_date: nil, start_date_after: nil, end_date_before: nil, end_date: nil, end_date_after: nil)
        params = {
            'Minutes' => minutes,
            'StartDate<' => start_date_before.iso8601,
            'StartDate' => start_date.iso8601,
            'StartDate>' => start_date_after.iso8601,
            'EndDate<' => end_date_before.iso8601,
            'EndDate' => end_date.iso8601,
            'EndDate>' => end_date_after.iso8601,
        }
        
        @version.fetch(
            'GET',
            @uri,
            params,
        )
        
        return WorkspaceStatisticsInstance.new(
            @version,
            payload,
            workspace_sid: @solution['workspace_sid'],
        )
      end
      
      ##
      # Provide a user friendly representation
      def to_s
        context = @solution.map {|k, v| "#{k}: #{v}"}.join(',')
        "#<Twilio.Taskrouter.V1.WorkspaceStatisticsContext #{context}>"
      end
    end
  
    class WorkspaceStatisticsInstance < InstanceResource
      def initialize(version, payload, workspace_sid)
        super(version)
        
        # Marshaled Properties
        @properties = {
            'realtime' => payload['realtime'],
            'cumulative' => payload['cumulative'],
            'account_sid' => payload['account_sid'],
            'workspace_sid' => payload['workspace_sid'],
        }
        
        # Context
        @instance_context = nil
        @params = {
            'workspace_sid' => workspace_sid,
        }
      end
      
      def _context
        unless @instance_context
          @instance_context = WorkspaceStatisticsContext(
              @version,
              @params['workspace_sid'],
          )
        end
        @instance_context
      end
      
      def realtime
        @properties['realtime']
      end
      
      def cumulative
        @properties['cumulative']
      end
      
      def account_sid
        @properties['account_sid']
      end
      
      def workspace_sid
        @properties['workspace_sid']
      end
      
      ##
      # Fetch a WorkspaceStatisticsInstance
      def fetch(minutes: nil, start_date_before: nil, start_date: nil, start_date_after: nil, end_date_before: nil, end_date: nil, end_date_after: nil)
        @context.fetch(
            start_date_before: nil,
            start_date: nil,
            start_date_after: nil,
            end_date_before: nil,
            end_date: nil,
            end_date_after: nil,
        )
      end
      
      ##
      # Provide a user friendly representation
      def to_s
        context = @params.map{|k, v| "#{k}: #{v}"}.join(" ")
        "<Twilio.Taskrouter.V1.WorkspaceStatisticsInstance #{context}>"
      end
    end
  end
end