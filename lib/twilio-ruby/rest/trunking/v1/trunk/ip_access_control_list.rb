##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /       

module Twilio
  module REST
    class IpAccessControlListList < ListResource
      ##
      # Initialize the IpAccessControlListList
      def initialize(version, trunk_sid)
        super
        
        # Path Solution
        @solution = {
            trunk_sid: trunk_sid
        }
        @uri = "/Trunks/#{@solution[:trunk_sid]}/IpAccessControlLists"
      end
      
      ##
      # Create a new IpAccessControlListInstance
      def create(self, ip_access_control_list_sid)
        data = values.of({
            IpAccessControlListSid: ip_access_control_list_sid,
        })
        
        @version.create(
            IpAccessControlListInstance,
            @solution,
            'POST',
            @uri,
            {}
            data
        )
      end
      
      ##
      # Reads IpAccessControlListInstance records from the API as a list.
      def read(self, limit=nil, page_size=nil)
        @version.read(
            limit,
            page_size
        ))
      end
      
      ##
      # Retrieve a single page of IpAccessControlListInstance records from the API.
      def page(self, page_token=None, page_number=None, page_size=None)
        params = values.of({
            PageToken: page_token,
            Page: page_number,
            PageSize: page_size,
        })
        @version.page(
            self,
            IpAccessControlListInstance,
            @solution,
            'GET',
            @uri,
            params
        )
      end
      
      ##
      # Constructs a IpAccessControlListContext
      def get(sid)
        IpAccessControlListContext.new(@version, sid, @solution)
      end
      
      ##
      # Provide a user friendly representation
      def to_s
        '#<Twilio.Trunking.V1.IpAccessControlListList>'
      end
    end
  end
end