##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /       

module Twilio
  module REST
    class CallList < ListResource
      ##
      # Initialize the CallList
      def initialize(version, account_sid)
        super
        
        # Path Solution
        @solution = {
            account_sid: account_sid
        }
        @uri = "/Accounts/#{@solution[:account_sid]}/Calls.json"
        
        # Components
        @feedback_summaries = None
      end
      
      ##
      # Create a new CallInstance
      def create(self, to, from, method=values.unset, fallback_url=values.unset, fallback_method=values.unset, status_callback=values.unset, status_callback_method=values.unset, send_digits=values.unset, if_machine=values.unset, timeout=values.unset, record=values.unset, url=values.unset, application_sid=values.unset)
        data = values.of({
            To: to,
            From: from,
            Url: url,
            ApplicationSid: application_sid,
            Method: method,
            FallbackUrl: fallback_url,
            FallbackMethod: fallback_method,
            StatusCallback: status_callback,
            StatusCallbackMethod: status_callback_method,
            SendDigits: send_digits,
            IfMachine: if_machine,
            Timeout: timeout,
            Record: record,
        })
        
        @version.create(
            CallInstance,
            @solution,
            'POST',
            @uri,
            {}
            data
        )
      end
      
      ##
      # Reads CallInstance records from the API as a list.
      def read(self, to=values.unset, from=values.unset, parent_call_sid=values.unset, status=values.unset, start_time_before=values.unset, start_time=values.unset, start_time_after=values.unset, end_time_before=values.unset, end_time=values.unset, end_time_after=values.unset, limit=nil, page_size=nil)
        @version.read(
            to,
            from,
            parent_call_sid,
            status,
            start_time_before,
            start_time,
            start_time_after,
            end_time_before,
            end_time,
            end_time_after,
            limit,
            page_size
        ))
      end
      
      ##
      # Retrieve a single page of CallInstance records from the API.
      def page(self, to=values.unset, from=values.unset, parent_call_sid=values.unset, status=values.unset, start_time_before=values.unset, start_time=values.unset, start_time_after=values.unset, end_time_before=values.unset, end_time=values.unset, end_time_after=values.unset, page_token=None, page_number=None, page_size=None)
        params = values.of({
            To: to,
            From: from,
            ParentCallSid: parent_call_sid,
            Status: status,
            StartTime<: serialize.iso8601_date(start_time_before),
            StartTime: serialize.iso8601_date(start_time),
            StartTime>: serialize.iso8601_date(start_time_after),
            EndTime<: serialize.iso8601_date(end_time_before),
            EndTime: serialize.iso8601_date(end_time),
            EndTime>: serialize.iso8601_date(end_time_after),
            PageToken: page_token,
            Page: page_number,
            PageSize: page_size,
        })
        @version.page(
            self,
            CallInstance,
            @solution,
            'GET',
            @uri,
            params
        )
      end
      
      ##
      # Access the feedback_summaries
      def feedback_summaries
        @feedback_summaries ||= FeedbackSummaryList(@version, @solution)
      end
      
      ##
      # Constructs a CallContext
      def get(sid)
        CallContext.new(@version, sid, @solution)
      end
      
      ##
      # Provide a user friendly representation
      def to_s
        '#<Twilio.Api.V2010.CallList>'
      end
    end
  end
end