##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /       

module Twilio
  module REST
    class ConferenceList < ListResource
      ##
      # Initialize the ConferenceList
      def initialize(version, account_sid)
        super
        
        # Path Solution
        @solution = {
            account_sid: account_sid
        }
        @uri = "/Accounts/#{@solution[:account_sid]}/Conferences.json"
      end
      
      ##
      # Reads ConferenceInstance records from the API as a list.
      def read(self, date_created_before=values.unset, date_created=values.unset, date_created_after=values.unset, date_updated_before=values.unset, date_updated=values.unset, date_updated_after=values.unset, friendly_name=values.unset, status=values.unset, limit=nil, page_size=nil)
        @version.read(
            date_created_before,
            date_created,
            date_created_after,
            date_updated_before,
            date_updated,
            date_updated_after,
            friendly_name,
            status,
            limit,
            page_size
        ))
      end
      
      ##
      # Retrieve a single page of ConferenceInstance records from the API.
      def page(self, date_created_before=values.unset, date_created=values.unset, date_created_after=values.unset, date_updated_before=values.unset, date_updated=values.unset, date_updated_after=values.unset, friendly_name=values.unset, status=values.unset, page_token=None, page_number=None, page_size=None)
        params = values.of({
            DateCreated<: serialize.iso8601_date(date_created_before),
            DateCreated: serialize.iso8601_date(date_created),
            DateCreated>: serialize.iso8601_date(date_created_after),
            DateUpdated<: serialize.iso8601_date(date_updated_before),
            DateUpdated: serialize.iso8601_date(date_updated),
            DateUpdated>: serialize.iso8601_date(date_updated_after),
            FriendlyName: friendly_name,
            Status: status,
            PageToken: page_token,
            Page: page_number,
            PageSize: page_size,
        })
        @version.page(
            self,
            ConferenceInstance,
            @solution,
            'GET',
            @uri,
            params
        )
      end
      
      ##
      # Constructs a ConferenceContext
      def get(sid)
        ConferenceContext.new(@version, sid, @solution)
      end
      
      ##
      # Provide a user friendly representation
      def to_s
        '#<Twilio.Api.V2010.ConferenceList>'
      end
    end
  end
end