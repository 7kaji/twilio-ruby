##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /       

module Twilio
  module REST
    class AuthorizedConnectAppList < ListResource
      ##
      # Initialize the AuthorizedConnectAppList
      def initialize(version, account_sid: nil)
        super(version)
        
        # Path Solution
        @solution = {
            account_sid: account_sid
        }
        @uri = "/Accounts/#{@solution[:account_sid]}/AuthorizedConnectApps.json"
      end
      
      ##
      # Reads AuthorizedConnectAppInstance records from the API as a list.
      def list(limit: nil, page_size: nil)
        self.stream(
            limit: limit,
            page_size: page_size
        ).entries
      end
      
      def stream(limit: nil, page_size: nil)
        limits = @version.read_limits(limit, page_size)
        
        page = self.page(
            page_size: limits['page_size'],
        )
        
        @version.stream(page, limit: limits['limit'], page_limit: limits['page_limit'])
      end
      
      def each
        limits = @version.read_limits
        
        page = self.page(
            page_size: limits['page_size'],
        )
        
        @version.stream(page,
                        limit: limits['limit'],
                        page_limit: limits['page_limit']).each {|x| yield x}
      end
      
      ##
      # Retrieve a single page of AuthorizedConnectAppInstance records from the API.
      def page(page_token: nil, page_number: nil, page_size: nil)
        params = {
            'PageToken' => page_token,
            'Page' => page_number,
            'PageSize' => page_size,
        }
        response = @version.page(
            'GET',
            @uri,
            params
        )
        return AuthorizedConnectAppPage.new(
            @version,
            response,
            account_sid: @solution['account_sid'],
        )
      end
      
      ##
      # Constructs a AuthorizedConnectAppContext
      def get(connect_app_sid)
        AuthorizedConnectAppContext.new(
            @version,
            account_sid: @solution[:account_sid],
            connect_app_sid: connect_app_sid,
        )
      end
      
      ##
      # Provide a user friendly representation
      def to_s
        '#<Twilio.Api.V2010.AuthorizedConnectAppList>'
      end
    end
  
    class AuthorizedConnectAppPage < Page
      def initialize(version, response, account_sid)
        super(version, response)
        
        # Path Solution
        @solution = {
            'account_sid' => account_sid,
        }
      end
      
      def get_instance(payload)
        return AuthorizedConnectAppInstance.new(
            @version,
            payload,
            account_sid: @solution['account_sid'],
        )
      end
      
      ##
      # Provide a user friendly representation
      def to_s
        '<Twilio.Api.V2010.AuthorizedConnectAppPage>'
      end
    end
  
    class AuthorizedConnectAppContext < InstanceContext
      def initialize(version, account_sid, connect_app_sid)
        super(version)
        
        # Path Solution
        @solution = {
            account_sid: account_sid,
            connect_app_sid: connect_app_sid,
        }
        @uri = "/Accounts/#{@solution[:account_sid]}/AuthorizedConnectApps/#{@solution[:connect_app_sid]}.json"
      end
      
      ##
      # Fetch a AuthorizedConnectAppInstance
      def fetch
        params = {}
        
        @version.fetch(
            'GET',
            @uri,
            params,
        )
        
        return AuthorizedConnectAppInstance.new(
            @version,
            payload,
            account_sid: @solution['account_sid'],
            connect_app_sid: @solution['connect_app_sid'],
        )
      end
      
      ##
      # Provide a user friendly representation
      def to_s
        context = @solution.map {|k, v| "#{k}: #{v}"}.join(',')
        "#<Twilio.Api.V2010.AuthorizedConnectAppContext #{context}>"
      end
    end
  
    class AuthorizedConnectAppInstance < InstanceResource
      def initialize(version, payload, account_sid, connect_app_sid: nil)
        super(version)
        
        # Marshaled Properties
        @properties = {
            'account_sid' => payload['account_sid'],
            'connect_app_company_name' => payload['connect_app_company_name'],
            'connect_app_description' => payload['connect_app_description'],
            'connect_app_friendly_name' => payload['connect_app_friendly_name'],
            'connect_app_homepage_url' => payload['connect_app_homepage_url'],
            'connect_app_sid' => payload['connect_app_sid'],
            'date_created' => Twilio.deserialize_rfc2822(payload['date_created']),
            'date_updated' => Twilio.deserialize_rfc2822(payload['date_updated']),
            'permissions' => payload['permissions'],
            'uri' => payload['uri'],
        }
        
        # Context
        @instance_context = nil
        @params = {
            'account_sid' => account_sid,
            'connect_app_sid' => connect_app_sid || @properties['connect_app_sid'],
        }
      end
      
      def context
        unless @instance_context
          @instance_context = AuthorizedConnectAppContext.new(
              @version,
              @params['account_sid'],
              @params['connect_app_sid'],
          )
        end
        @instance_context
      end
      
      def account_sid
        @properties['account_sid']
      end
      
      def connect_app_company_name
        @properties['connect_app_company_name']
      end
      
      def connect_app_description
        @properties['connect_app_description']
      end
      
      def connect_app_friendly_name
        @properties['connect_app_friendly_name']
      end
      
      def connect_app_homepage_url
        @properties['connect_app_homepage_url']
      end
      
      def connect_app_sid
        @properties['connect_app_sid']
      end
      
      def date_created
        @properties['date_created']
      end
      
      def date_updated
        @properties['date_updated']
      end
      
      def permissions
        @properties['permissions']
      end
      
      def uri
        @properties['uri']
      end
      
      ##
      # Fetch a AuthorizedConnectAppInstance
      def fetch
        @context.fetch()
      end
      
      ##
      # Provide a user friendly representation
      def to_s
        context = @params.map{|k, v| "#{k}: #{v}"}.join(" ")
        "<Twilio.Api.V2010.AuthorizedConnectAppInstance #{context}>"
      end
    end
  end
end